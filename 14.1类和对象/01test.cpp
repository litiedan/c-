#include<iostream>
using namespace std;
//构造函数和析构函数    负责对象的初始化和清理
//一个对象或者变量如果没有初始状态，对其使用后果是未知的。使用完之后，没有及时清理也会造成一定的安全问题
//c++中构造函数和析构函数会被编译器自动调用，完成对象初始化的清理工作

//构造函数：创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无需手动调用
//析构函数：对象销毁前系统自动调用，执行一些清理工作

//如果不提供构造函数和析构函数，编译器 会默认提供空实现的构造函数和析构函数

class Person
{
public:
    // 构造函数语法：    类名(){}
    // 1.没有返回值，也不写void
    // 2.函数名称与类名相同
    // 3.构造函数可以有参数，因此可以发生重载
    // 4.程序在调用对象时候，会自动调用构造，无需手动调用，并且只调用一次
    Person()
    {
        cout<<"构造函数"<<endl;
    }

    // 析构函数语法：     ~类名(){}
    // 1.没有返回值，也不写void
    // 2.函数名称与类名相同，在前面加~
    // 3.构造函数不可以有参数，因此不可以发生重载
    // 4.程序在对象销毁前，会自动调用构造，无需手动调用，并且只调用一次

    ~Person()
    {
        cout<<"析构函数"<<endl;
    }

};

void test01()
{
    Person p;//在栈上的数据，test01执行完毕后，释放这个对象
}

int main()
{
    test01();
    Person p1;//main函数执行完毕后，释放这个对象
    return 0;
}